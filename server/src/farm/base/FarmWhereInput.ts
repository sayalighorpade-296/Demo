/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumFarmFarmType } from "./EnumFarmFarmType";
import { IsEnum, IsOptional } from "class-validator";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { EnumFarmSunlightAvailability } from "./EnumFarmSunlightAvailability";
@InputType()
class FarmWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumFarmFarmType,
  })
  @IsEnum(EnumFarmFarmType)
  @IsOptional()
  @Field(() => EnumFarmFarmType, {
    nullable: true,
  })
  farmType?: "Terrace" | "Farm" | "Garden";

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  heightArea?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  lengthArea?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumFarmSunlightAvailability,
  })
  @IsEnum(EnumFarmSunlightAvailability)
  @IsOptional()
  @Field(() => EnumFarmSunlightAvailability, {
    nullable: true,
  })
  sunlightAvailability?: "Low" | "Medium" | "High";

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  widthArea?: FloatNullableFilter;
}
export { FarmWhereInput };
